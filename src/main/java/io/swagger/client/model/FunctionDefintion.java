/*
 * OpenFaaS API Gateway
 * OpenFaaS API documentation
 *
 * OpenAPI spec version: 0.8.12
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FunctionDefintionLimits;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * FunctionDefintion
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-06T06:46:10.176+02:00")
public class FunctionDefintion {
  @SerializedName("service")
  private String service = null;

  @SerializedName("network")
  private String network = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("envProcess")
  private String envProcess = null;

  @SerializedName("envVars")
  private Map<String, String> envVars = null;

  @SerializedName("constraints")
  private List<String> constraints = null;

  @SerializedName("labels")
  private List<String> labels = null;

  @SerializedName("annotations")
  private List<String> annotations = null;

  @SerializedName("secrets")
  private List<String> secrets = null;

  @SerializedName("registryAuth")
  private String registryAuth = null;

  @SerializedName("limits")
  private FunctionDefintionLimits limits = null;

  @SerializedName("requests")
  private FunctionDefintionLimits requests = null;

  public FunctionDefintion service(String service) {
    this.service = service;
    return this;
  }

   /**
   * Name of deployed function
   * @return service
  **/
  @ApiModelProperty(example = "nodeinfo", required = true, value = "Name of deployed function")
  public String getService() {
    return service;
  }

  public void setService(String service) {
    this.service = service;
  }

  public FunctionDefintion network(String network) {
    this.network = network;
    return this;
  }

   /**
   * Docker swarm network, usually func_functions
   * @return network
  **/
  @ApiModelProperty(example = "func_functions", value = "Docker swarm network, usually func_functions")
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }

  public FunctionDefintion image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Docker image in accessible registry
   * @return image
  **/
  @ApiModelProperty(example = "functions/nodeinfo:latest", required = true, value = "Docker image in accessible registry")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public FunctionDefintion envProcess(String envProcess) {
    this.envProcess = envProcess;
    return this;
  }

   /**
   * Process for watchdog to fork
   * @return envProcess
  **/
  @ApiModelProperty(example = "node main.js", required = true, value = "Process for watchdog to fork")
  public String getEnvProcess() {
    return envProcess;
  }

  public void setEnvProcess(String envProcess) {
    this.envProcess = envProcess;
  }

  public FunctionDefintion envVars(Map<String, String> envVars) {
    this.envVars = envVars;
    return this;
  }

  public FunctionDefintion putEnvVarsItem(String key, String envVarsItem) {
    if (this.envVars == null) {
      this.envVars = new HashMap<>();
    }
    this.envVars.put(key, envVarsItem);
    return this;
  }

   /**
   * Overrides to environmental variables
   * @return envVars
  **/
  @ApiModelProperty(value = "Overrides to environmental variables")
  public Map<String, String> getEnvVars() {
    return envVars;
  }

  public void setEnvVars(Map<String, String> envVars) {
    this.envVars = envVars;
  }

  public FunctionDefintion constraints(List<String> constraints) {
    this.constraints = constraints;
    return this;
  }

  public FunctionDefintion addConstraintsItem(String constraintsItem) {
    if (this.constraints == null) {
      this.constraints = new ArrayList<>();
    }
    this.constraints.add(constraintsItem);
    return this;
  }

   /**
   * Get constraints
   * @return constraints
  **/
  @ApiModelProperty(value = "")
  public List<String> getConstraints() {
    return constraints;
  }

  public void setConstraints(List<String> constraints) {
    this.constraints = constraints;
  }

  public FunctionDefintion labels(List<String> labels) {
    this.labels = labels;
    return this;
  }

  public FunctionDefintion addLabelsItem(String labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * An array of labels used by the back-end for making scheduling or routing decisions
   * @return labels
  **/
  @ApiModelProperty(value = "An array of labels used by the back-end for making scheduling or routing decisions")
  public List<String> getLabels() {
    return labels;
  }

  public void setLabels(List<String> labels) {
    this.labels = labels;
  }

  public FunctionDefintion annotations(List<String> annotations) {
    this.annotations = annotations;
    return this;
  }

  public FunctionDefintion addAnnotationsItem(String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new ArrayList<>();
    }
    this.annotations.add(annotationsItem);
    return this;
  }

   /**
   * An array of annotations used by the back-end for management, orchestration, events and build tasks
   * @return annotations
  **/
  @ApiModelProperty(value = "An array of annotations used by the back-end for management, orchestration, events and build tasks")
  public List<String> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(List<String> annotations) {
    this.annotations = annotations;
  }

  public FunctionDefintion secrets(List<String> secrets) {
    this.secrets = secrets;
    return this;
  }

  public FunctionDefintion addSecretsItem(String secretsItem) {
    if (this.secrets == null) {
      this.secrets = new ArrayList<>();
    }
    this.secrets.add(secretsItem);
    return this;
  }

   /**
   * Get secrets
   * @return secrets
  **/
  @ApiModelProperty(value = "")
  public List<String> getSecrets() {
    return secrets;
  }

  public void setSecrets(List<String> secrets) {
    this.secrets = secrets;
  }

  public FunctionDefintion registryAuth(String registryAuth) {
    this.registryAuth = registryAuth;
    return this;
  }

   /**
   * Private registry base64-encoded basic auth (as present in ~/.docker/config.json)
   * @return registryAuth
  **/
  @ApiModelProperty(example = "dXNlcjpwYXNzd29yZA==", value = "Private registry base64-encoded basic auth (as present in ~/.docker/config.json)")
  public String getRegistryAuth() {
    return registryAuth;
  }

  public void setRegistryAuth(String registryAuth) {
    this.registryAuth = registryAuth;
  }

  public FunctionDefintion limits(FunctionDefintionLimits limits) {
    this.limits = limits;
    return this;
  }

   /**
   * Get limits
   * @return limits
  **/
  @ApiModelProperty(value = "")
  public FunctionDefintionLimits getLimits() {
    return limits;
  }

  public void setLimits(FunctionDefintionLimits limits) {
    this.limits = limits;
  }

  public FunctionDefintion requests(FunctionDefintionLimits requests) {
    this.requests = requests;
    return this;
  }

   /**
   * Get requests
   * @return requests
  **/
  @ApiModelProperty(value = "")
  public FunctionDefintionLimits getRequests() {
    return requests;
  }

  public void setRequests(FunctionDefintionLimits requests) {
    this.requests = requests;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FunctionDefintion functionDefintion = (FunctionDefintion) o;
    return Objects.equals(this.service, functionDefintion.service) &&
        Objects.equals(this.network, functionDefintion.network) &&
        Objects.equals(this.image, functionDefintion.image) &&
        Objects.equals(this.envProcess, functionDefintion.envProcess) &&
        Objects.equals(this.envVars, functionDefintion.envVars) &&
        Objects.equals(this.constraints, functionDefintion.constraints) &&
        Objects.equals(this.labels, functionDefintion.labels) &&
        Objects.equals(this.annotations, functionDefintion.annotations) &&
        Objects.equals(this.secrets, functionDefintion.secrets) &&
        Objects.equals(this.registryAuth, functionDefintion.registryAuth) &&
        Objects.equals(this.limits, functionDefintion.limits) &&
        Objects.equals(this.requests, functionDefintion.requests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(service, network, image, envProcess, envVars, constraints, labels, annotations, secrets, registryAuth, limits, requests);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FunctionDefintion {\n");
    
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    envProcess: ").append(toIndentedString(envProcess)).append("\n");
    sb.append("    envVars: ").append(toIndentedString(envVars)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    secrets: ").append(toIndentedString(secrets)).append("\n");
    sb.append("    registryAuth: ").append(toIndentedString(registryAuth)).append("\n");
    sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
    sb.append("    requests: ").append(toIndentedString(requests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

